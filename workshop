<!DOCTYPE html>
<html data-theme="dark">
<head>
<title>PS! Game Corner Custom Minigame Creator - Workshop</title>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Quicksand">
<script>
document.addEventListener('DOMContentLoaded', () => {
    const copyableItems = document.querySelectorAll('.copyable-item');
    const copyFeedbackPopup = document.getElementById('copy-feedback-popup');

    copyableItems.forEach(item => {
        item.addEventListener('click', async () => {
            const textToCopy = item.getAttribute('data-copy-text');

            try {
                await navigator.clipboard.writeText(textToCopy);
                showPopup();
            } catch (err) {
                console.error('Failed to copy text: ', err);
                alert('Failed to copy text. Please try again or copy manually.'); // Fallback alert
            }
        });
    });

    function showPopup() {
        copyFeedbackPopup.classList.add('show');
        setTimeout(() => {
            copyFeedbackPopup.classList.remove('show');
        }, 2000); // Popup disappears after 2 seconds
    }
});

function calculateSettingAsThemeString({ localStorageTheme, systemSettingDark }) {
  if (localStorageTheme !== null) {
    return localStorageTheme;
  }

  if (systemSettingDark.matches) {
    return "dark";
  }

  return "light";
}

function updateButton({ buttonEl, isDark }) {
  const newCta = isDark ? "Light" : "Dark";
buttonEl.setAttribute("aria-label", newCta);
  buttonEl.innerText = newCta;
}

function updateThemeOnHtmlEl({ theme }) {
  document.querySelector("html").setAttribute("data-theme", theme);
}

const button = document.querySelector("[data-theme-toggle]");
const localStorageTheme = localStorage.getItem("theme");
const systemSettingDark = window.matchMedia("(prefers-color-scheme: dark)");

let currentThemeSetting = calculateSettingAsThemeString({ localStorageTheme, systemSettingDark });

updateButton({ buttonEl: button, isDark: currentThemeSetting === "dark" });
updateThemeOnHtmlEl({ theme: currentThemeSetting });

button.addEventListener("click", (event) => {
  const newTheme = currentThemeSetting === "dark" ? "light" : "dark";

  localStorage.setItem("theme", newTheme);
  updateButton({ buttonEl: button, isDark: newTheme === "dark" });
  updateThemeOnHtmlEl({ theme: newTheme });

  currentThemeSetting = newTheme;
});

</script>
<style>
.copyable-item {
    cursor: pointer;
}

.copyable-item:hover {
    color: var(--color-fg);
}

.popup {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: #333;
    color: #fff;
    padding: 10px 20px;
    border-radius: 5px;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    z-index: 1000;
}

.popup.show {
    opacity: 1;
    visibility: visible;
}

code {
  color: silver;
}
textarea {
  padding: 25px;
  border-radius: 5px;
  border: 1px solid var(--color-fg);
  width: 95%;
  field-sizing: content;
  min-height: 4rem; /* Example: set a minimum height */
  background-color: var(--color-bg);
  color: var(--color-fg);
  transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease;
}
div {
  overflow: scroll;
}
td {
  vertical-align: middle;
}
body {
  font-family: "Quicksand", sans-serif;
  padding: 30px;
  background-color: var(--color-bg);
  color: var(--color-fg);
  transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease;
}
[data-theme="light"] {
   --color-bg: #ffffff;
   --color-fg: #000000;
   --transition-speed: 0.5s;
}
[data-theme="dark"] {
   --color-bg: #000000;
   --color-fg: #ffffff;
   --transition-speed: 0.5s;
}
button {
  font-family: "Quicksand", sans-serif;
  border: 1px solid var(--color-fg);
  border-radius: 5px;
  padding: 0.5rem 1rem;
  transition: all var(--global-transition-time) ease-in-out;
  color: var(--color-fg);
  background-color: var(--color-bg);
  transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease;
  margin-bottom: 24px;
}

</style>
</head>
<body>
<center>
<h1><table><tr><td>PS! Game Corner Custom Minigame Creator</td></tr></table></h1>
<h3><span style="letter-spacing:5px;"><table><tr>
<td>WORKSHOP</td>
</tr></table></span></h3>
</center>

<hr><br>
<center>

<button
    type="button"
    data-theme-toggle
    aria-label="Light"
  >Light</button>

<br><br>

<h3>Click on Skitty to use Copycat!</h3><br>

</center>

<div id = "container">

<div id="copy-feedback-popup" class="popup">
        Skitty used Copycat!
    </div>

<div class="searchValue" style="display: inline-block ; border: 1px solid #68a ; border-radius: 5px ; padding: 25px ; width: 95%"><details><summary><span style="display: inline-block;height: 30px;width: 40px;image-rendering: pixelated;background:transparent url(https://play.pokemonshowdown.com/sprites/pokemonicons-sheet.png?v16) no-repeat scroll -80px -2310px"></span><strong class="searchValue">Fidough's Sandwiched Pokemon (note: allegedly does not render properly on DuckDuckGo, should try to fix)</strong></summary><p>
<div style="display: inline-block ; border: 1px solid #68a ; border-radius: 5px ; padding: 25px ; width: 95%"><b>Preparations</b><br>

<ol>
<li>Replace each <code>✿</code> with a different Pokemon name.</li>
<li>OPTIONAL: Replace the <code>-0</code> in <code>-0px -0px</code> with positive numbers (e.g. <code>5px 10px</code>) to move Pokemon right or down.</li>
</ol>

</div><br><br>
<div style="display: inline-block ; border: 1px solid #68a ; border-radius: 5px ; padding: 25px ; width: 95%"><b>Prompt</b><br><br>

<textarea>
!htmlbox <span style="display: inline-block;height: 30px;width: 40px;image-rendering: pixelated;background:transparent url(https://play.pokemonshowdown.com/sprites/pokemonicons-sheet.png?v16) no-repeat scroll -80px -2310px;"></span><b>Mini Fidough's Sandwiched Pokemon</b><br>Name all five Pokemon that are stacked on top of each other.<br><br>This minigame may not render properly on certain browsers.<hr><center><div style="display: inline-block ; border: 1px solid #68a ; border-radius: 5px ; padding: 5px ; width: 200px; height: 200px"><marquee behavior="slide" width="200" scrollamount="3" direction="right">
<span style="display: inline-block; width: 200px; height: 200px;image-rendering: pixelated;background:transparent url(https://play.pokemonshowdown.com/sprites/ani/✿.gif) no-repeat scroll -0px -0px">
<span style="display: inline-block; width: 200px; height: 200px;image-rendering: pixelated;background:transparent url(https://play.pokemonshowdown.com/sprites/ani/✿.gif) no-repeat scroll -0px -0px">
<span style="display: inline-block; width: 200px; height: 200px;image-rendering: pixelated;background:transparent url(https://play.pokemonshowdown.com/sprites/ani/✿.gif) no-repeat scroll -0px -0px">
<span style="display: inline-block; width: 200px; height: 200px;image-rendering: pixelated;background:transparent url(https://play.pokemonshowdown.com/sprites/ani/✿.gif) no-repeat scroll -0px -0px">
<span style="display: inline-block; width: 200px; height: 200px;image-rendering: pixelated;background:transparent url(https://play.pokemonshowdown.com/sprites/ani/✿.gif) no-repeat scroll -0px -0px">
</span></span></span></span></span></marquee></div><br><div style="display: inline-block ; border: 0px solid #68a ; border-radius: 5px ; padding: 5px ; width: 200px"><i>(wait up to 5 seconds for the Pokemon to show up)</i></div></center>
</textarea>

</div><br><br>
<div style="display: inline-block ; border: 1px solid #68a ; border-radius: 5px ; padding: 25px ; width: 95%"><b>Click on Skitty to use Copycat!</b>

<br><br>PS! Command for Generating 5 Random Pokemon Names <span style="display: inline-block;height: 30px;width: 40px;image-rendering: pixelated;background:transparent url(https://play.pokemonshowdown.com/sprites/pokemonicons-sheet.png?v16) no-repeat scroll -0px -750px" class="copyable-item" data-copy-text="/randpoke 5, natdex"></span>

</div>
</p></details></div><br><br>

</div>
