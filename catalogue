<!DOCTYPE html>
<html data-theme="light">
<head>
<title>PS! Game Corner Custom Minigames - Catalogue</title>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Quicksand">
<script>
function calculateSettingAsThemeString({ localStorageTheme, systemSettingDark }) {
  if (localStorageTheme !== null) {
    return localStorageTheme;
  }

  if (systemSettingDark.matches) {
    return "dark";
  }

  return "light";
}

function updateButton({ buttonEl, isDark }) {
  const newCta = isDark ? "Light" : "Dark";
buttonEl.setAttribute("aria-label", newCta);
  buttonEl.innerText = newCta;
}

function updateThemeOnHtmlEl({ theme }) {
  document.querySelector("html").setAttribute("data-theme", theme);
}

const button = document.querySelector("[data-theme-toggle]");
const localStorageTheme = localStorage.getItem("theme");
const systemSettingDark = window.matchMedia("(prefers-color-scheme: dark)");

let currentThemeSetting = calculateSettingAsThemeString({ localStorageTheme, systemSettingDark });

updateButton({ buttonEl: button, isDark: currentThemeSetting === "dark" });
updateThemeOnHtmlEl({ theme: currentThemeSetting });

button.addEventListener("click", (event) => {
  const newTheme = currentThemeSetting === "dark" ? "light" : "dark";

  localStorage.setItem("theme", newTheme);
  updateButton({ buttonEl: button, isDark: newTheme === "dark" });
  updateThemeOnHtmlEl({ theme: newTheme });

  currentThemeSetting = newTheme;
});
</script>
<style>
td {
  vertical-align: middle;
}
body {
  font-family: "Quicksand", sans-serif;
  padding: 30px;
  background-color: var(--color-bg);
  color: var(--color-fg);
  transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease;
}
[data-theme="light"] {
   --color-bg: #ffffff;
   --color-fg: #000000;
   --transition-speed: 0.5s;
}
[data-theme="dark"] {
   --color-bg: #000000;
   --color-fg: #ffffff;
   --transition-speed: 0.5s;
}
button {
  font-family: "Quicksand", sans-serif;
  border: 1px solid var(--color-fg);
  border-radius: 5px;
  padding: 0.5rem 1rem;
  transition: all var(--global-transition-time) ease-in-out;
  color: var(--color-fg);
  background-color: var(--color-bg);
  transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease;
  margin-bottom: 24px;
}
</style>
</head>
<body>
<center>
<h1><table><tr><td>PS! Game Corner Custom Minigames</td></tr></table></h1>
<h3><span style="letter-spacing:5px;"><table><tr>
<td>CATALOGUE</td>
<td style="width: 50px"></td><td><a style="text-decoration:none; color: silver" href="https://htmlpreview.github.io/?https://github.com/bouquets-ps/gc-minigames/blob/main/faq">FAQ</a></td>
</tr></table></span></h3>
</center>

<hr><br>
<center>

<button
    type="button"
    data-theme-toggle
    aria-label="Light"
  >Light</button>

<br><br></center>

<h2>Identification</h2>

<details><summary><img src="//play.pokemonshowdown.com/sprites/ani/sigilyph.gif"><b>Sigilyph's Ancient Ruins</b></summary><p>
to be added
</p></details><br><br>

<h2>Knowledge</h2>

<details><summary><img src="//play.pokemonshowdown.com/sprites/ani/cinderace.gif"><b>Cinderace's Game Scores</b></summary><p>
to be added
</p></details><br><br>

<details><summary><img src="//play.pokemonshowdown.com/sprites/ani/togetic.gif"><b>Togetic's Trainer Cards</b></summary><p>
to be added
</p></details><br><br>

<h2>Luck</h2>

<div style="display: inline-block ; border: 1px solid #68a ; border-radius: 5px ; padding: 5px"><details><summary><b>Diglett's Whack-a-Mole</b><img src="//play.pokemonshowdown.com/sprites/ani/diglett.gif"></summary><p>
to be added
</p></details></div><br><br>

<details><summary><img src="//play.pokemonshowdown.com/sprites/ani/shaymin.gif"><b>Shaymin's Meadow</b></summary><p>
to be added
</p></details><br><br>

<h2>Speed</h2>



